# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
            echo "MySQL is up!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Run DB initialization script
      run: |
        echo "Running DB setup..."
        mysql -h 127.0.0.1 -uroot -proot < rest-api/src/main/resources/dbsetup.sql

    - name: Unit Test
      run: mvn test

    - name: Run Integration Tests and Verify
      run: |
        mvn -Pintegration integration-test
        mvn failsafe:verify

    - name: Performance Test
      run: |
        mvn -Pperformance integration-test
        mvn failsafe:verify

    - name: Install Doxygen
      run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

    - name: Generate Maven Site
      run: sudo ./mvnw site
    
    - name: Copy all documentation artifacts to docs folder
      run: |
        rm -rf docs
        mkdir -p docs/doxygen
        cp -r target/doxygen/html/* docs/doxygen/ || true
        cp -r target/doxygen/latex docs/doxygen/ || true
    
        # Procesar cada submÃ³dulo
        for module in rest-api client; do
          if [ -d "$module/target/site" ]; then
            mkdir -p "docs/site/$module"
            cp -r "$module/target/site/"* "docs/site/$module/"
          fi
    
          if [ -d "$module/target/reports" ]; then
            mkdir -p "docs/site/$module/reports"
            cp -r "$module/target/reports/"* "docs/site/$module/reports/"
          fi
        done
        
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: docs
        branch: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}
